
services:
  pg_db:
    image: postgres:16.4
    ports:
      - "54320:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./assets/init_back.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data/
    container_name: pg_db
    restart: unless-stopped
    networks:
      - backend

  backend_group1_1:
    env_file:
      - .env
    build:
      context: .
      dockerfile: backend/cmd/group1/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - pg_db
    restart: unless-stopped
    container_name: backend_group1_1
    networks:
      - backend

  balancer:
    build:
      context: .
      dockerfile: balancer/cmd/Dockerfile
    ports:
      - "8000:8080"
    depends_on:
      - backend_group1_1
#      - backend_group1_2
    volumes:
       - ./balancer/configs/balancer.yaml:/app/configs/balancer.yaml
    container_name: http_balancer
    networks:
      - backend
    restart: unless-stopped

volumes:
  pg_data:


networks:
  backend:
    driver: bridge